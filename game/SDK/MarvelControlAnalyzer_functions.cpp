#pragma once

/*
* SDK generated by Chaos Dumper (Based off Dumper-7)
*

*/

// Package: MarvelControlAnalyzer

#include "Basic.hpp"

#include "MarvelControlAnalyzer_classes.hpp"
#include "MarvelControlAnalyzer_parameters.hpp"


namespace SDK
{

// Function MarvelControlAnalyzer.ControlAnalyzerSubsystem.ChangeTimerInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewInterval                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlAnalyzerSubsystem::ChangeTimerInterval(float NewInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlAnalyzerSubsystem", "ChangeTimerInterval");

	Params::ControlAnalyzerSubsystem_ChangeTimerInterval Parms{};

	Parms.NewInterval = NewInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelControlAnalyzer.ControlAnalyzerSubsystem.K2_OnDeInitialize
// (Event, Public, BlueprintEvent)

void UControlAnalyzerSubsystem::K2_OnDeInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlAnalyzerSubsystem", "K2_OnDeInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MarvelControlAnalyzer.ControlAnalyzerSubsystem.K2_OnInitialize
// (Event, Public, BlueprintEvent)

void UControlAnalyzerSubsystem::K2_OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlAnalyzerSubsystem", "K2_OnInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MarvelControlAnalyzer.ControlAnalyzerSubsystem.ResetScoreReportConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewLSThreshold                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewRSThreshold                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewLTThreshold                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewRTThreshold                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewInterval                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlAnalyzerSubsystem::ResetScoreReportConfig(float NewLSThreshold, float NewRSThreshold, float NewLTThreshold, float NewRTThreshold, float NewInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlAnalyzerSubsystem", "ResetScoreReportConfig");

	Params::ControlAnalyzerSubsystem_ResetScoreReportConfig Parms{};

	Parms.NewLSThreshold = NewLSThreshold;
	Parms.NewRSThreshold = NewRSThreshold;
	Parms.NewLTThreshold = NewLTThreshold;
	Parms.NewRTThreshold = NewRTThreshold;
	Parms.NewInterval = NewInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelControlAnalyzer.ControlAnalyzerSubsystem.SendWarning
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<int32>                           LSScores                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           RSScores                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           LTScores                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           RTScores                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UControlAnalyzerSubsystem::SendWarning(const TArray<int32>& LSScores, const TArray<int32>& RSScores, const TArray<int32>& LTScores, const TArray<int32>& RTScores)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlAnalyzerSubsystem", "SendWarning");

	Params::ControlAnalyzerSubsystem_SendWarning Parms{};

	Parms.LSScores = std::move(LSScores);
	Parms.RSScores = std::move(RSScores);
	Parms.LTScores = std::move(LTScores);
	Parms.RTScores = std::move(RTScores);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MarvelControlAnalyzer.ControlAnalyzerSubsystem.SetDeviceInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   vendorId_0                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ProductId_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UControlAnalyzerSubsystem::SetDeviceInfo(int32 vendorId_0, int32 ProductId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlAnalyzerSubsystem", "SetDeviceInfo");

	Params::ControlAnalyzerSubsystem_SetDeviceInfo Parms{};

	Parms.vendorId_0 = vendorId_0;
	Parms.ProductId_0 = ProductId_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MarvelControlAnalyzer.ControlAnalyzerSubsystem.WriteToLog
// (Event, Public, BlueprintEvent)

void UControlAnalyzerSubsystem::WriteToLog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ControlAnalyzerSubsystem", "WriteToLog");

	UObject::ProcessEvent(Func, nullptr);
}

}

