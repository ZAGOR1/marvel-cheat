#pragma once

/*
* SDK generated by Chaos Dumper (Based off Dumper-7)
*

*/

// Package: Hero_1017

#include "Basic.hpp"

#include "Hero_1017_classes.hpp"
#include "Hero_1017_parameters.hpp"


namespace SDK
{

// Function Hero_1017.Ability_101701.OnHoveringAbilityActivate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UGameplayAbility*                 ActivatedAbility                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101701::OnHoveringAbilityActivate(class UGameplayAbility* ActivatedAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101701", "OnHoveringAbilityActivate");

	Params::Ability_101701_OnHoveringAbilityActivate Parms{};

	Parms.ActivatedAbility = ActivatedAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101701.OnHoveringAbilityEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UGameplayAbility*                 Ability                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101701::OnHoveringAbilityEnd(class UGameplayAbility* Ability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101701", "OnHoveringAbilityEnd");

	Params::Ability_101701_OnHoveringAbilityEnd Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101701.UpdateAeroStateByOtherAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 Ability                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAbilityActivate                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101701::UpdateAeroStateByOtherAbility(class UGameplayAbility* Ability, const bool bAbilityActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101701", "UpdateAeroStateByOtherAbility");

	Params::Ability_101701_UpdateAeroStateByOtherAbility Parms{};

	Parms.Ability = Ability;
	Parms.bAbilityActivate = bAbilityActivate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Projectile_10171101.SetExplodeDirs
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FVector>                  InDirs                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AProjectile_10171101::SetExplodeDirs(const TArray<struct FVector>& InDirs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10171101", "SetExplodeDirs");

	Params::Projectile_10171101_SetExplodeDirs Parms{};

	Parms.InDirs = std::move(InDirs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Projectile_10171101.SetInitProjectileLoc
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          InLoc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AProjectile_10171101::SetInitProjectileLoc(const struct FVector& InLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10171101", "SetInitProjectileLoc");

	Params::Projectile_10171101_SetInitProjectileLoc Parms{};

	Parms.InLoc = std::move(InLoc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Projectile_10171101.SetPreviousProjectileLoc
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FVector>                  InLoc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AProjectile_10171101::SetPreviousProjectileLoc(const TArray<struct FVector>& InLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10171101", "SetPreviousProjectileLoc");

	Params::Projectile_10171101_SetPreviousProjectileLoc Parms{};

	Parms.InLoc = std::move(InLoc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Projectile_10171101.SetProjectileTracePortalArray
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<bool>                            InTracePortalArray                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AProjectile_10171101::SetProjectileTracePortalArray(const TArray<bool>& InTracePortalArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10171101", "SetProjectileTracePortalArray");

	Params::Projectile_10171101_SetProjectileTracePortalArray Parms{};

	Parms.InTracePortalArray = std::move(InTracePortalArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Projectile_10171101.GetExplodeDirs
// (Final, Native, Public, Const)
// Parameters:
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> AProjectile_10171101::GetExplodeDirs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10171101", "GetExplodeDirs");

	Params::Projectile_10171101_GetExplodeDirs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.Projectile_10171101.GetInitProjectileLoc
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AProjectile_10171101::GetInitProjectileLoc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10171101", "GetInitProjectileLoc");

	Params::Projectile_10171101_GetInitProjectileLoc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.Projectile_10171101.GetPreviousProjectileLoc
// (Final, Native, Public, Const)
// Parameters:
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> AProjectile_10171101::GetPreviousProjectileLoc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10171101", "GetPreviousProjectileLoc");

	Params::Projectile_10171101_GetPreviousProjectileLoc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.Projectile_10171101.GetProjectileTracePortalArray
// (Final, Native, Public, Const)
// Parameters:
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<bool> AProjectile_10171101::GetProjectileTracePortalArray() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10171101", "GetProjectileTracePortalArray");

	Params::Projectile_10171101_GetProjectileTracePortalArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.ScatterProjectileMovement.GetExplodeDirs
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FVector>                  OutDirs                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UScatterProjectileMovement::GetExplodeDirs(TArray<struct FVector>* OutDirs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScatterProjectileMovement", "GetExplodeDirs");

	Params::ScatterProjectileMovement_GetExplodeDirs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDirs != nullptr)
		*OutDirs = std::move(Parms.OutDirs);
}


// Function Hero_1017.ScatterProjectileMovement.GetProjectileLocsAndDirs
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// TArray<struct FVector>                  OutProjectileLocs                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  OutProjectileDirs                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UScatterProjectileMovement::GetProjectileLocsAndDirs(TArray<struct FVector>* OutProjectileLocs, TArray<struct FVector>* OutProjectileDirs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScatterProjectileMovement", "GetProjectileLocsAndDirs");

	Params::ScatterProjectileMovement_GetProjectileLocsAndDirs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutProjectileLocs != nullptr)
		*OutProjectileLocs = std::move(Parms.OutProjectileLocs);

	if (OutProjectileDirs != nullptr)
		*OutProjectileDirs = std::move(Parms.OutProjectileDirs);
}


// Function Hero_1017.ScatterProjectileMovement.SweepMulti
// (Final, Native, Public, HasOutParams, HasDefaults, Const)
// Parameters:
// TArray<struct FHitResult>               Hits                                                   (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                          TraceStart                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TraceEnd                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                            InitialRotation                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScatterProjectileMovement::SweepMulti(TArray<struct FHitResult>* Hits, const struct FVector& TraceStart, const struct FVector& TraceEnd, const struct FQuat& InitialRotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScatterProjectileMovement", "SweepMulti");

	Params::ScatterProjectileMovement_SweepMulti Parms{};

	Parms.TraceStart = std::move(TraceStart);
	Parms.TraceEnd = std::move(TraceEnd);
	Parms.InitialRotation = std::move(InitialRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Hits != nullptr)
		*Hits = std::move(Parms.Hits);

	return Parms.ReturnValue;
}


// Function Hero_1017.Projectile_10173101.SpawnFireRegion
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          SpawnLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SpawnNormal                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AProjectile_10173101::SpawnFireRegion(const struct FVector& SpawnLocation, const struct FVector& SpawnNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Projectile_10173101", "SpawnFireRegion");

	Params::Projectile_10173101_SpawnFireRegion Parms{};

	Parms.SpawnLocation = std::move(SpawnLocation);
	Parms.SpawnNormal = std::move(SpawnNormal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.SummonedComp_10173101.MulticastOnDestrutibleFracture
// (Net, Native, Event, NetMulticast, Public)

void USummonedComp_10173101::MulticastOnDestrutibleFracture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SummonedComp_10173101", "MulticastOnDestrutibleFracture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101741.GetFlyDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAbility_101741::GetFlyDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101741", "GetFlyDirection");

	Params::Ability_101741_GetFlyDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.Ability_101751.CheckFlameDomain
// (Final, Native, Public)

void UAbility_101751::CheckFlameDomain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "CheckFlameDomain");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101751.HintHeightNotSatisfied
// (Event, Public, BlueprintEvent)

void UAbility_101751::HintHeightNotSatisfied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "HintHeightNotSatisfied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Hero_1017.Ability_101751.HintLackOfFlameDomain
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CurNum                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101751::HintLackOfFlameDomain(int32 CurNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "HintLackOfFlameDomain");

	Params::Ability_101751_HintLackOfFlameDomain Parms{};

	Parms.CurNum = CurNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hero_1017.Ability_101751.MulticastSetSummonedLifeSpan
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// TArray<class AActor*>                   FlameDomains                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101751::MulticastSetSummonedLifeSpan(const TArray<class AActor*>& FlameDomains, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "MulticastSetSummonedLifeSpan");

	Params::Ability_101751_MulticastSetSummonedLifeSpan Parms{};

	Parms.FlameDomains = std::move(FlameDomains);
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101751.OnFireAreaCreateSucceed
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           SpawnActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAbility_101751::OnFireAreaCreateSucceed(class AActor* SpawnActor, const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "OnFireAreaCreateSucceed");

	Params::Ability_101751_OnFireAreaCreateSucceed Parms{};

	Parms.SpawnActor = SpawnActor;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101751.OnFireLocationFracture
// (Final, Native, Public)

void UAbility_101751::OnFireLocationFracture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "OnFireLocationFracture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101751.OnFireWallClosed
// (Final, Native, Public)

void UAbility_101751::OnFireWallClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "OnFireWallClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101751.OnNewFireRegionCreated
// (Final, Native, Public)
// Parameters:
// class AActor*                           InFireRegion                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101751::OnNewFireRegionCreated(class AActor* InFireRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "OnNewFireRegionCreated");

	Params::Ability_101751_OnNewFireRegionCreated Parms{};

	Parms.InFireRegion = InFireRegion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101751.OnNewFireWallCreated
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           SpawnActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAbilityTargetDataHandle Data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAbility_101751::OnNewFireWallCreated(class AActor* SpawnActor, const struct FGameplayAbilityTargetDataHandle& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "OnNewFireWallCreated");

	Params::Ability_101751_OnNewFireWallCreated Parms{};

	Parms.SpawnActor = SpawnActor;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101751.OnPlayerApplyDamage
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           InDamageCauser                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeModifierHandle         ModifierParameterHandle                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAbility_101751::OnPlayerApplyDamage(class AActor* InDamageCauser, class AActor* TargetActor, const struct FAttributeModifierHandle& ModifierParameterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "OnPlayerApplyDamage");

	Params::Ability_101751_OnPlayerApplyDamage Parms{};

	Parms.InDamageCauser = InDamageCauser;
	Parms.TargetActor = TargetActor;
	Parms.ModifierParameterHandle = std::move(ModifierParameterHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Ability_101751.OnRep_FlameDomainNum
// (Final, Native, Public)

void UAbility_101751::OnRep_FlameDomainNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ability_101751", "OnRep_FlameDomainNum");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Scope_10175102.MulticastEndTask
// (Net, Native, Event, NetMulticast, Public)

void AScope_10175102::MulticastEndTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175102", "MulticastEndTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Scope_10175102.OnRep_FireArea
// (Final, Native, Public)

void AScope_10175102::OnRep_FireArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175102", "OnRep_FireArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Scope_10175102.OnRep_ShowFireArea
// (Final, Native, Public)

void AScope_10175102::OnRep_ShowFireArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175102", "OnRep_ShowFireArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Scope_10175102.SetFireAreaFX
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    bIsRectangle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        InBoxSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  AreaVertices                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AScope_10175102::SetFireAreaFX(bool bIsRectangle, const struct FVector& Location, const struct FVector2D& InBoxSize, const TArray<struct FVector>& AreaVertices, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175102", "SetFireAreaFX");

	Params::Scope_10175102_SetFireAreaFX Parms{};

	Parms.bIsRectangle = bIsRectangle;
	Parms.Location = std::move(Location);
	Parms.InBoxSize = std::move(InBoxSize);
	Parms.AreaVertices = std::move(AreaVertices);
	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Hero_1017.Scope_10175103.GetCueFXInitLocs
// (Final, Native, Public)
// Parameters:
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> AScope_10175103::GetCueFXInitLocs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175103", "GetCueFXInitLocs");

	Params::Scope_10175103_GetCueFXInitLocs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.Scope_10175103.MulticastEndTask
// (Net, Native, Event, NetMulticast, Public)

void AScope_10175103::MulticastEndTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175103", "MulticastEndTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Scope_10175103.OnRep_FireWall
// (Final, Native, Public)

void AScope_10175103::OnRep_FireWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175103", "OnRep_FireWall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Scope_10175103.OnRep_FireWallPoints
// (Final, Native, Public)

void AScope_10175103::OnRep_FireWallPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175103", "OnRep_FireWallPoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Scope_10175103.OnRep_ShowFireWall
// (Final, Native, Public)

void AScope_10175103::OnRep_ShowFireWall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175103", "OnRep_ShowFireWall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Scope_10175103.UpdateFireWallPosition
// (Final, Native, Public)

void AScope_10175103::UpdateFireWallPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10175103", "UpdateFireWallPosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Cue_Scope_Loop_10175103.StartFadeOut
// (Final, Native, Public)

void ACue_Scope_Loop_10175103::StartFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Scope_Loop_10175103", "StartFadeOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Cue_Scope_Loop_10175103.UpdateCue
// (Final, Native, Public, HasDefaults)
// Parameters:
// int32                                   LevelID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Scope_Loop_10175103::UpdateCue(int32 LevelID, int32 Index_0, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Scope_Loop_10175103", "UpdateCue");

	Params::Cue_Scope_Loop_10175103_UpdateCue Parms{};

	Parms.LevelID = LevelID;
	Parms.Index_0 = Index_0;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Scope_10176102.GetConfig
// (Final, Native, Protected)
// Parameters:
// class UConfig_101761*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UConfig_101761* AScope_10176102::GetConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10176102", "GetConfig");

	Params::Scope_10176102_GetConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.Scope_10176102.GetCurrentRadius
// (Final, Native, Protected)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AScope_10176102::GetCurrentRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Scope_10176102", "GetCurrentRadius");

	Params::Scope_10176102_GetCurrentRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.Cue_Ability_Loop_10176102.SetDecalAndFXActive
// (Final, Native, Public)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10176102::SetDecalAndFXActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10176102", "SetDecalAndFXActive");

	Params::Cue_Ability_Loop_10176102_SetDecalAndFXActive Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.Cue_Ability_Loop_10176102.ViewTargetChanged
// (Final, Native, Public)
// Parameters:
// class AActor*                           ViewTarget                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACue_Ability_Loop_10176102::ViewTargetChanged(class AActor* ViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cue_Ability_Loop_10176102", "ViewTargetChanged");

	Params::Cue_Ability_Loop_10176102_ViewTargetChanged Parms{};

	Parms.ViewTarget = ViewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchChildActor.LerpScale
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AHumanTorchChildActor::LerpScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchChildActor", "LerpScale");

	Params::HumanTorchChildActor_LerpScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.HumanTorchChildActor.OnCharReborn
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AActor*                           OutTargetActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterRebornParam            Param                                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AHumanTorchChildActor::OnCharReborn(class AActor* OutTargetActor, const struct FCharacterRebornParam& Param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchChildActor", "OnCharReborn");

	Params::HumanTorchChildActor_OnCharReborn Parms{};

	Parms.OutTargetActor = OutTargetActor;
	Parms.Param = std::move(Param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchChildActor.OnOwnerFlyFlameChanged
// (Final, Native, Public)
// Parameters:
// EFlameStage                             NewStage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHumanTorchChildActor::OnOwnerFlyFlameChanged(EFlameStage NewStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchChildActor", "OnOwnerFlyFlameChanged");

	Params::HumanTorchChildActor_OnOwnerFlyFlameChanged Parms{};

	Parms.NewStage = NewStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchChildActor.OnOwnerTagUpdate
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    TagExists                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHumanTorchChildActor::OnOwnerTagUpdate(const struct FGameplayTag& Tag, bool TagExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchChildActor", "OnOwnerTagUpdate");

	Params::HumanTorchChildActor_OnOwnerTagUpdate Parms{};

	Parms.Tag = std::move(Tag);
	Parms.TagExists = TagExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchChildActor.OnOwnerTrailActive
// (Final, Native, Public)
// Parameters:
// bool                                    bNewActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHumanTorchChildActor::OnOwnerTrailActive(bool bNewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchChildActor", "OnOwnerTrailActive");

	Params::HumanTorchChildActor_OnOwnerTrailActive Parms{};

	Parms.bNewActive = bNewActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchChildActor.ResetBodyMat
// (Final, Native, Public)

void AHumanTorchChildActor::ResetBodyMat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchChildActor", "ResetBodyMat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchCharacter.ClearFlameStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFlameStage                             Stage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHumanTorchCharacter::ClearFlameStage(EFlameStage Stage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchCharacter", "ClearFlameStage");

	Params::HumanTorchCharacter_ClearFlameStage Parms{};

	Parms.Stage = Stage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchCharacter.GetCurFlameStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFlameStage                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFlameStage AHumanTorchCharacter::GetCurFlameStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchCharacter", "GetCurFlameStage");

	Params::HumanTorchCharacter_GetCurFlameStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Hero_1017.HumanTorchCharacter.SetFlameStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFlameStage                             Stage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHumanTorchCharacter::SetFlameStage(EFlameStage Stage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchCharacter", "SetFlameStage");

	Params::HumanTorchCharacter_SetFlameStage Parms{};

	Parms.Stage = Stage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchCharacter.SetFlyFlameTrailActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AHumanTorchCharacter::SetFlyFlameTrailActive(bool bNewActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchCharacter", "SetFlyFlameTrailActive");

	Params::HumanTorchCharacter_SetFlyFlameTrailActive Parms{};

	Parms.bNewActive = bNewActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchCharacter.StopSound
// (Final, Native, Public)

void AHumanTorchCharacter::StopSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchCharacter", "StopSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Hero_1017.HumanTorchCharacter.UpdateSound
// (Final, Native, Public)

void AHumanTorchCharacter::UpdateSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HumanTorchCharacter", "UpdateSound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

